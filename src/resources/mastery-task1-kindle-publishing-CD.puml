@startuml
class GetBookActivity {
    recommendationServiceClient: RecommendationsServiceClient
    catalogDao: CatalogDao
    execute(final GetBookRequest request): GetBookResponse
}
class RemoveBookFromCatalogActivity {
    recommendationServiceClient: RecommendationsServiceClient
    catalogDao: CatalogDao
    execute(final RemoveBookFromCatalogRequest request): RemoveBookFromCatalogResponse
}
class SubmitBookForPublishingActivity {
    recommendationServiceClient: RecommendationsServiceClient
    catalogDao: CatalogDao
    execute(final SubmitBookForPublishingRequest request): SubmitBookForPublishingResponse
}
class RecommendationsServiceClient {
    recommendationsService: RecommendationsService
}
class CatalogDao {
    dynamoDbMapper: DynamoDBMapper
}
class PublishingStatusDao {
    dynamoDbMapper: DynamoDBMapper
}
class CatalogItemVersion {
    @DynamoDBHashKey bookId: String
    @DynamoDBRangeKey version: int
    inactive: boolean
    title: String
    author: String
    text: String
    genre: BookGenre
}
class PublishingStatusItem {
    @DynamoDBHashKey publishingRecordId: String
    @DynamoDBRangeKey status: PublishingRecordStatus
     statusMessage: String
     bookId: String

}
class BookNotFoundException {
}
class PublishingStatusNotFoundException {
}

CatalogItemVersion o-- CatalogDao
PublishingStatusItem o-- PublishingStatusDao
CatalogDao ... BookNotFoundException: throws
SubmitBookForPublishingActivity ... PublishingStatusNotFoundException: throws
GetBookActivity o-- CatalogDao
RemoveBookFromCatalogActivity o-- CatalogDao
GetBookActivity o-- RecommendationsServiceClient
SubmitBookForPublishingActivity o-- PublishingStatusDao
@enduml
